[package]
name = "syact"
authors = [ "Samuel Nösslböck <samuel.noesslboeck@gmail.com>" ]
version = "0.12.1-alpha"
description = "A library to control motors (mainly stepper motors) and components, read data from sensors and more"
edition = "2021"
repository = "https://github.com/SamuelNoesslboeck/syact"
license-file = "LICENSE"
keywords = [ "framework", "robotics", "iot", "raspberry-pi" ]

[workspace]
members = [ "syact_macros" ]
exclude = [ "article", "sketches" ]

[lib]
name = "syact"
path = "src/lib.rs"

[dependencies]
# Imports
atomic_float = "0.1.0"
cfg-if = "1.0.0"
clap = { version = "4.3.16", features = [ "cargo" ] }
embedded-hal = { version = "0.2.7", features = [ "unproven" ] }
glam = { version = "0.24.0", optional = true }
serde = { version = "1.0.192", features = [ "derive" ], optional = true }
serde_json = { version = "1.0.108", optional = true }
serde_repr = { version = "0.1", optional = true }
spin_sleep = { version = "1.1.1", optional = true }
sylo = { path = "../sylo", features = [ "serde" ]}

# #############
# # PLATFORMS #
# #############
  # Raspberry
  rppal = { version = "0.14.1", optional = true }
#

# Subcrates
syact_macros = { path = "syact_macros", version = "0.1.0", optional = true }

[dev-dependencies]
# Plotting and displaying
crossterm = "0.27.0"

# Net-examples
# magicbox_mk1 = { git = "https://github.com/SamuelNoesslboeck/MagicBox_Mk1", rev = "5a113b2f" }
# syiot = { git = "https://github.com/SamuelNoesslboeck/syiot.git" }

[target.'cfg(windows)'.dev-dependencies]
plotters = "0.3.4"

[features]
default = ["std", "safe-move", "embed-thread"]
std = ["dep:glam", "dep:serde", "dep:serde_json", "dep:serde_repr", "dep:spin_sleep", "dep:syact_macros"]
safe-move = []
embed-thread = ["std"]

# Platform features
rasp = ["std", "dep:rppal"]

# ##############
# #  Examples  #
# ##############
[[example]]
name = "custom_component"
path = "examples/custom_component.rs"

[[example]]
name = "dc_motors"
path = "examples/dc_motors.rs"

# Async
  [[example]]
  name = "async-plot_pos"
  path = "examples/async/plot_pos.rs"
# 

# Hardware 
  # Devices
    # Control an LED at a certain pin
    [[example]]
    name = "hardware-devices-led"
    path = "examples/hardware/devices/led.rs"
  # 

  # Meas
    [[example]]
    name = "hardware-meas-endswitch_cons"
    path = "examples/hardware/meas/endswitch_cons.rs"

    [[example]]
    name = "hardware-meas-endswitch"
    path = "examples/hardware/meas/endswitch.rs"

    [[example]]
    name = "hardware-meas-simple_meas_endswitch"
    path = "examples/hardware/meas/simple_meas_endswitch.rs"

    [[example]]
    name = "hardware-meas-virtual_endswitch"
    path = "examples/hardware/meas/virtual_endswitch.rs"
  #

  # Stepper
    # Drive the stepper motor by a fixed distance
    [[example]]
    name = "hardware-stepper-fixed_dist"
    path = "examples/hardware/stepper/fixed_dist.rs"
  #

  # Tools
    [[example]]
    name = "hardware-tools-tongs"
    path = "examples/hardware/tools/tongs.rs"
  # 
#

# Math
  [[example]]
  name = "math-builders"
  path = "examples/math/builders.rs"

  [[example]]
  name = "math-movements"
  path = "examples/math/movements.rs"

  [[example]]
  name = "math-path"
  path = "examples/math/path.rs"

  [[example]]
  name = "math-time"
  path = "examples/math/time.rs"
#

# Net
  # [[example]]
  # name = "net-ctrl_client"
  # path = "examples/net/ctrl_client.rs"

  # [[example]]
  # name = "net-ctrl_server"
  # path = "examples/net/ctrl_server.rs"

  # [[example]]
  # name = "net-ctrl_stepper_client"
  # path = "examples/net/ctrl_stepper_client.rs"

  # [[example]]
  # name = "net-ctrl_stepper_server"
  # path = "examples/net/ctrl_stepper_server.rs"
#